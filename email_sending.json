{
  "name": "Email Sending Workflow",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "startTime": "10:00",
              "interval": 30
            }
          ]
        }
      },
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://localhost:8000/api/v1/auth/token",
        "authentication": "genericCredentialType",
        "genericCredentialType": "lead-generator-api",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "username",
              "value": "={{ $credentials.username }}"
            },
            {
              "name": "password",
              "value": "={{ $credentials.password }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Get API Token",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        500,
        300
      ],
      "credentials": {
        "httpBasicAuth": {
          "id": "1",
          "name": "Lead Generator API"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "// Extract the token from the response\nconst token = $input.item.json.access_token;\nreturn { token };"
      },
      "name": "Extract Token",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        750,
        300
      ]
    },
    {
      "parameters": {
        "method": "GET",
        "url": "http://localhost:8000/api/v1/emails/pending?limit=20",
        "authentication": "genericCredentialType",
        "genericCredentialType": "lead-generator-api",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $node[\"Extract Token\"].json[\"token\"] }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Get Pending Emails",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1000,
        300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.count }}",
              "operation": "larger",
              "value2": 0
            }
          ]
        }
      },
      "name": "Has Pending Emails?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1250,
        300
      ]
    },
    {
      "parameters": {
        "functionCode": "// Extract the array of emails\nconst emails = $input.item.json.emails;\nreturn { emails };"
      },
      "name": "Extract Emails",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1500,
        200
      ]
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {}
      },
      "name": "Process Emails",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 2.1,
      "position": [
        1750,
        200
      ]
    },
    {
      "parameters": {
        "amount": 5,
        "unit": "seconds"
      },
      "name": "Rate Limit",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        2000,
        200
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=http://localhost:8000/api/v1/emails/send",
        "authentication": "genericCredentialType",
        "genericCredentialType": "lead-generator-api",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $node[\"Extract Token\"].json[\"token\"] }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "generation_id",
              "value": "={{ $json.generation_id }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Send Email",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2250,
        200
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.status }}",
              "operation": "equals",
              "value2": "success"
            }
          ]
        }
      },
      "name": "Email Sent?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2500,
        200
      ]
    },
    {
      "parameters": {
        "operation": "append",
        "sheetName": "Sent Emails",
        "options": {
          "skipEmptyCells": true
        }
      },
      "name": "Record Success",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        2750,
        100
      ],
      "executeOnce": false,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "2",
          "name": "Google Sheets Account"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "sheetName": "Failed Emails",
        "options": {
          "skipEmptyCells": true
        }
      },
      "name": "Record Failure",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        2750,
        300
      ],
      "executeOnce": false,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "2",
          "name": "Google Sheets Account"
        }
      }
    },
    {
      "parameters": {
        "channel": "channel",
        "text": "=ðŸ“¨ Emails sent: {{ $node[\"Get Pending Emails\"].json.count }}\n\nSuccessful: {{ $node[\"Record Success\"].runData.length }}\nFailed: {{ $node[\"Record Failure\"].runData.length }}",
        "otherOptions": {}
      },
      "name": "Send Results",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 1,
      "position": [
        3000,
        200
      ]
    },
    {
      "parameters": {
        "channel": "channel",
        "text": "=ðŸ“­ No pending emails to send",
        "otherOptions": {}
      },
      "name": "No Emails",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 1,
      "position": [
        1500,
        400
      ]
    },
    {
      "parameters": {
        "method": "GET",
        "url": "http://localhost:8000/api/v1/emails/stats",
        "authentication": "genericCredentialType",
        "genericCredentialType": "lead-generator-api",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $node[\"Extract Token\"].json[\"token\"] }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Get Email Stats",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2750,
        500
      ]
    },
    {
      "parameters": {
        "content": "=## Email Campaign Stats ({{ $json.date }})\n\n### Overall Performance\n- **Total Emails Sent**: {{ $json.total_sent }}\n- **Open Rate**: {{ $json.open_rate }}%\n- **Response Rate**: {{ $json.response_rate }}%\n- **Meeting Booked Rate**: {{ $json.meeting_rate }}%\n\n### Template Performance\n| Template | Sent | Opens | Responses | Meetings |\n|----------|------|-------|-----------|----------|\n{{#each $json.templates}}\n| {{this.name}} | {{this.sent}} | {{this.opens}} | {{this.responses}} | {{this.meetings}} |\n{{/each}}",
        "additionalFields": {}
      },
      "name": "Generate Report",
      "type": "n8n-nodes-base.markdown",
      "typeVersion": 1,
      "position": [
        3000,
        500
      ]
    },
    {
      "parameters": {
        "to": "your-email@example.com",
        "subject": "=Email Campaign Report - {{ $json.date }}",
        "text": "={{ $node[\"Generate Report\"].json[\"content\"] }}",
        "options": {}
      },
      "name": "Email Report",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 1,
      "position": [
        3250,
        500
      ],
      "credentials": {
        "smtp": {
          "id": "3",
          "name": "SMTP Account"
        }
      }
    }
  ],
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get API Token",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get API Token": {
      "main": [
        [
          {
            "node": "Extract Token",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Token": {
      "main": [
        [
          {
            "node": "Get Pending Emails",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Pending Emails": {
      "main": [
        [
          {
            "node": "Has Pending Emails?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Has Pending Emails?": {
      "main": [
        [
          {
            "node": "Extract Emails",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Emails",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Emails": {
      "main": [
        [
          {
            "node": "Process Emails",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Emails": {
      "main": [
        [
          {
            "node": "Rate Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rate Limit": {
      "main": [
        [
          {
            "node": "Send Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Email": {
      "main": [
        [
          {
            "node": "Email Sent?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Email Sent?": {
      "main": [
        [
          {
            "node": "Record Success",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Record Failure",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Record Success": {
      "main": [
        [
          {
            "node": "Send Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Record Failure": {
      "main": [
        [
          {
            "node": "Send Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Emails": {
      "main": [
        [
          {
            "node": "Get Email Stats",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Results": {
      "main": [
        [
          {
            "node": "Get Email Stats",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Email Stats": {
      "main": [
        [
          {
            "node": "Generate Report",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Report": {
      "main": [
        [
          {
            "node": "Email Report",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {},
  "staticData": null,
  "tags": [
    {
      "id": 1,
      "name": "Lead Generator",
      "color": "#00ff00"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2023-04-17T15:00:00.000Z",
  "versionId": "1"
} 